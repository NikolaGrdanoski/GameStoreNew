@model IEnumerable<GameStoreNew.Models.UserGames>

@{
    ViewData["Title"] = "Index";
}

<h1 style="color: white;">Index</h1>

<!--<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead style="color: white;>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.StoreUser)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Game)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.StoreUser)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Game.Name)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>-->

<div class="container-lg">
    <div class="row">
        @foreach (var item in Model)
        {
            <div class="col-md-6">
                <div class="card smooth-transition">
                    <div class="card-body">
                        <h3 class="card-title">@item.Game.Name</h3>
                        @if (!string.IsNullOrEmpty(item.Game.GameArt))
                        {
                            <img width="291" height="342" src="@item.Game.GameArt" alt="Game Art" />
                        }
                        else
                        {
                            <p>Image is unavailable</p>
                        }
                        <p class="card-text">Developer: @Html.DisplayFor(modelItem => item.Game.Developer.DeveloperName)</p>
                        <p class="card-text">Date Published: @Html.DisplayFor(modelItem => item.Game.YearPublished)</p>
                        <p class="card-text">Categories: @Html.DisplayFor(modelItem => item.Game.GameCategories)</p>
                        <a asp-action="Details" asp-route-id="@item.Id"> Details </a>
                        @if (User.Identity.IsAuthenticated && User.IsInRole("User"))
                        {
                            <a asp-action="Return" asp-route-id="@item.Game.Id">Return</a>
                        }
                        @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                        {
                            <a asp-action="Edit" asp-route-id="@item.Id"> Edit </a>
                            <a asp-action="Delete" asp-route-id="@item.Id"> Delete </a>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<style>
    .container-lg {
        padding: 20px; /* Add padding to the container */
        overflow-x: hidden; /* Hide horizontal overflow */
    }

    .card {
        width: 100%; /* Ensure cards take full width */
        max-width: 800px; /* Set maximum width of each card */
        display: flex; /* Use flexbox for layout */
        overflow: hidden;
        margin-bottom: 20px; /* Add space between cards */
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
        transition: transform 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275), box-shadow 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    }

        .card:hover {
            box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.2);
            transform: scale(1.02);
        }

    .card-body {
        padding: 20px;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        flex-grow: 1; /* Allow content to grow and take remaining space */
    }

    .card-title {
        font-size: 1.25rem;
        font-weight: bold;
        margin-bottom: 10px;
    }

    .card-text {
        margin-bottom: 10px;
    }

    .button-container {
        display: flex;
        justify-content: flex-end;
    }

        .button-container a {
            margin-left: 10px;
        }

    .smooth-transition {
        transition: transform 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275), box-shadow 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    }

    h1,
    .btn-outline-dark,
    form {
        margin-bottom: 20px;
    }
</style>